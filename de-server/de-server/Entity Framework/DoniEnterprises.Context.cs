//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace de_server.Entity_Framework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DhoniEnterprisesEntities : DbContext
    {
        public DhoniEnterprisesEntities()
            : base("name=DhoniEnterprisesEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AppUserRight> AppUserRights { get; set; }
        public virtual DbSet<AppUser> AppUsers { get; set; }
        public virtual DbSet<AppUsersImage> AppUsersImages { get; set; }
        public virtual DbSet<BusinessPartner> BusinessPartners { get; set; }
        public virtual DbSet<BusinessPartner_BankDetails> BusinessPartner_BankDetails { get; set; }
        public virtual DbSet<BusinessPartner_ContactNumbers> BusinessPartner_ContactNumbers { get; set; }
        public virtual DbSet<BusinessPartner_Contacts> BusinessPartner_Contacts { get; set; }
        public virtual DbSet<BusinessPartner_Emails> BusinessPartner_Emails { get; set; }
        public virtual DbSet<Origin> Origins { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ShipmentStatu> ShipmentStatus { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Transaction> Transactions { get; set; }
        public virtual DbSet<TransactionsCommission> TransactionsCommissions { get; set; }
        public virtual DbSet<TransactionsContract> TransactionsContracts { get; set; }
        public virtual DbSet<TransactionsNote> TransactionsNotes { get; set; }
        public virtual DbSet<TransactionsSecondary> TransactionsSecondaries { get; set; }
        public virtual DbSet<TransactionsShipment> TransactionsShipments { get; set; }
        public virtual DbSet<TransactionsStatu> TransactionsStatus { get; set; }
        public virtual DbSet<transactionViewed> transactionVieweds { get; set; }
        public virtual DbSet<UserEvent> UserEvents { get; set; }
        public virtual DbSet<TransactionFile> TransactionFiles { get; set; }
        public virtual DbSet<dailyProductPrice> dailyProductPrices { get; set; }
    
        public virtual int addNewAppUser(string title, string firstName, string lastName, string password, string email, Nullable<System.Guid> guID, string designation, Nullable<bool> isAdmin)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            var guIDParameter = guID.HasValue ?
                new ObjectParameter("guID", guID) :
                new ObjectParameter("guID", typeof(System.Guid));
    
            var designationParameter = designation != null ?
                new ObjectParameter("designation", designation) :
                new ObjectParameter("designation", typeof(string));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("isAdmin", isAdmin) :
                new ObjectParameter("isAdmin", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("addNewAppUser", titleParameter, firstNameParameter, lastNameParameter, passwordParameter, emailParameter, guIDParameter, designationParameter, isAdminParameter);
        }
    
        public virtual int AppUserChangePasword(Nullable<int> userID, string password, Nullable<System.Guid> guID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var guIDParameter = guID.HasValue ?
                new ObjectParameter("guID", guID) :
                new ObjectParameter("guID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AppUserChangePasword", userIDParameter, passwordParameter, guIDParameter);
        }
    
        public virtual ObjectResult<getAllUsers_Result> getAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getAllUsers_Result>("getAllUsers");
        }
    
        public virtual int NewUserLoginDetails(string userName, string password, Nullable<System.DateTime> dOB, string email)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewUserLoginDetails", userNameParameter, passwordParameter, dOBParameter, emailParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<Nullable<long>> uspAddBusinessPartner(Nullable<bool> isSupplier, Nullable<bool> isBroker, Nullable<bool> isShipper, Nullable<bool> isBuyer, Nullable<bool> onDoniContract, Nullable<int> createdBy, Nullable<int> reliabilityIndex, string bPName, string bPWebsite, string address, string country)
        {
            var isSupplierParameter = isSupplier.HasValue ?
                new ObjectParameter("IsSupplier", isSupplier) :
                new ObjectParameter("IsSupplier", typeof(bool));
    
            var isBrokerParameter = isBroker.HasValue ?
                new ObjectParameter("IsBroker", isBroker) :
                new ObjectParameter("IsBroker", typeof(bool));
    
            var isShipperParameter = isShipper.HasValue ?
                new ObjectParameter("IsShipper", isShipper) :
                new ObjectParameter("IsShipper", typeof(bool));
    
            var isBuyerParameter = isBuyer.HasValue ?
                new ObjectParameter("IsBuyer", isBuyer) :
                new ObjectParameter("IsBuyer", typeof(bool));
    
            var onDoniContractParameter = onDoniContract.HasValue ?
                new ObjectParameter("OnDoniContract", onDoniContract) :
                new ObjectParameter("OnDoniContract", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var reliabilityIndexParameter = reliabilityIndex.HasValue ?
                new ObjectParameter("ReliabilityIndex", reliabilityIndex) :
                new ObjectParameter("ReliabilityIndex", typeof(int));
    
            var bPNameParameter = bPName != null ?
                new ObjectParameter("BPName", bPName) :
                new ObjectParameter("BPName", typeof(string));
    
            var bPWebsiteParameter = bPWebsite != null ?
                new ObjectParameter("BPWebsite", bPWebsite) :
                new ObjectParameter("BPWebsite", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("uspAddBusinessPartner", isSupplierParameter, isBrokerParameter, isShipperParameter, isBuyerParameter, onDoniContractParameter, createdByParameter, reliabilityIndexParameter, bPNameParameter, bPWebsiteParameter, addressParameter, countryParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> uspAddBusinessPartnerBankDetails(Nullable<long> bpID, string branchAddress, string bankName, string accountTitle, string accountNumber, string accountCountry)
        {
            var bpIDParameter = bpID.HasValue ?
                new ObjectParameter("bpID", bpID) :
                new ObjectParameter("bpID", typeof(long));
    
            var branchAddressParameter = branchAddress != null ?
                new ObjectParameter("branchAddress", branchAddress) :
                new ObjectParameter("branchAddress", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("bankName", bankName) :
                new ObjectParameter("bankName", typeof(string));
    
            var accountTitleParameter = accountTitle != null ?
                new ObjectParameter("AccountTitle", accountTitle) :
                new ObjectParameter("AccountTitle", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var accountCountryParameter = accountCountry != null ?
                new ObjectParameter("AccountCountry", accountCountry) :
                new ObjectParameter("AccountCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("uspAddBusinessPartnerBankDetails", bpIDParameter, branchAddressParameter, bankNameParameter, accountTitleParameter, accountNumberParameter, accountCountryParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> uspAddBusinessPartnerContact(Nullable<long> bpId, Nullable<bool> bp_Cont_IsPrimary, string bp_Cont_fullName, string bp_Cont_designation, string bp_Cont_Email, string bp_Cont_PrimaryNumber, string bp_Cont_SecondryNumber, Nullable<int> bp_Cont_CreatedBy)
        {
            var bpIdParameter = bpId.HasValue ?
                new ObjectParameter("bpId", bpId) :
                new ObjectParameter("bpId", typeof(long));
    
            var bp_Cont_IsPrimaryParameter = bp_Cont_IsPrimary.HasValue ?
                new ObjectParameter("bp_Cont_IsPrimary", bp_Cont_IsPrimary) :
                new ObjectParameter("bp_Cont_IsPrimary", typeof(bool));
    
            var bp_Cont_fullNameParameter = bp_Cont_fullName != null ?
                new ObjectParameter("bp_Cont_fullName", bp_Cont_fullName) :
                new ObjectParameter("bp_Cont_fullName", typeof(string));
    
            var bp_Cont_designationParameter = bp_Cont_designation != null ?
                new ObjectParameter("bp_Cont_designation", bp_Cont_designation) :
                new ObjectParameter("bp_Cont_designation", typeof(string));
    
            var bp_Cont_EmailParameter = bp_Cont_Email != null ?
                new ObjectParameter("bp_Cont_Email", bp_Cont_Email) :
                new ObjectParameter("bp_Cont_Email", typeof(string));
    
            var bp_Cont_PrimaryNumberParameter = bp_Cont_PrimaryNumber != null ?
                new ObjectParameter("bp_Cont_PrimaryNumber", bp_Cont_PrimaryNumber) :
                new ObjectParameter("bp_Cont_PrimaryNumber", typeof(string));
    
            var bp_Cont_SecondryNumberParameter = bp_Cont_SecondryNumber != null ?
                new ObjectParameter("bp_Cont_SecondryNumber", bp_Cont_SecondryNumber) :
                new ObjectParameter("bp_Cont_SecondryNumber", typeof(string));
    
            var bp_Cont_CreatedByParameter = bp_Cont_CreatedBy.HasValue ?
                new ObjectParameter("bp_Cont_CreatedBy", bp_Cont_CreatedBy) :
                new ObjectParameter("bp_Cont_CreatedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("uspAddBusinessPartnerContact", bpIdParameter, bp_Cont_IsPrimaryParameter, bp_Cont_fullNameParameter, bp_Cont_designationParameter, bp_Cont_EmailParameter, bp_Cont_PrimaryNumberParameter, bp_Cont_SecondryNumberParameter, bp_Cont_CreatedByParameter);
        }
    
        public virtual int uspAddBusinessPartnerContactNumber(Nullable<long> bpId, string contactType, string ontactNumber, Nullable<int> createdBy)
        {
            var bpIdParameter = bpId.HasValue ?
                new ObjectParameter("bpId", bpId) :
                new ObjectParameter("bpId", typeof(long));
    
            var contactTypeParameter = contactType != null ?
                new ObjectParameter("contactType", contactType) :
                new ObjectParameter("contactType", typeof(string));
    
            var ontactNumberParameter = ontactNumber != null ?
                new ObjectParameter("ontactNumber", ontactNumber) :
                new ObjectParameter("ontactNumber", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("createdBy", createdBy) :
                new ObjectParameter("createdBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddBusinessPartnerContactNumber", bpIdParameter, contactTypeParameter, ontactNumberParameter, createdByParameter);
        }
    
        public virtual int uspAddBusinessPartnerEmail(Nullable<long> bp_ID, string email)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddBusinessPartnerEmail", bp_IDParameter, emailParameter);
        }
    
        public virtual int uspAddBusinessPartnerProducts(Nullable<long> bp_ID, Nullable<int> prod_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            var prod_IDParameter = prod_ID.HasValue ?
                new ObjectParameter("prod_ID", prod_ID) :
                new ObjectParameter("prod_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddBusinessPartnerProducts", bp_IDParameter, prod_IDParameter);
        }
    
        public virtual int uspAddProduct(string productName, Nullable<int> createdBy, Nullable<int> moisture, Nullable<int> weaveled, string origin, Nullable<int> purity, Nullable<int> splits, string quality, Nullable<int> damaged, Nullable<int> foreignMatter, Nullable<int> greenDamaged, Nullable<int> otherColor, Nullable<int> wrinkled)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var moistureParameter = moisture.HasValue ?
                new ObjectParameter("moisture", moisture) :
                new ObjectParameter("moisture", typeof(int));
    
            var weaveledParameter = weaveled.HasValue ?
                new ObjectParameter("weaveled", weaveled) :
                new ObjectParameter("weaveled", typeof(int));
    
            var originParameter = origin != null ?
                new ObjectParameter("origin", origin) :
                new ObjectParameter("origin", typeof(string));
    
            var purityParameter = purity.HasValue ?
                new ObjectParameter("purity", purity) :
                new ObjectParameter("purity", typeof(int));
    
            var splitsParameter = splits.HasValue ?
                new ObjectParameter("splits", splits) :
                new ObjectParameter("splits", typeof(int));
    
            var qualityParameter = quality != null ?
                new ObjectParameter("quality", quality) :
                new ObjectParameter("quality", typeof(string));
    
            var damagedParameter = damaged.HasValue ?
                new ObjectParameter("damaged", damaged) :
                new ObjectParameter("damaged", typeof(int));
    
            var foreignMatterParameter = foreignMatter.HasValue ?
                new ObjectParameter("foreignMatter", foreignMatter) :
                new ObjectParameter("foreignMatter", typeof(int));
    
            var greenDamagedParameter = greenDamaged.HasValue ?
                new ObjectParameter("greenDamaged", greenDamaged) :
                new ObjectParameter("greenDamaged", typeof(int));
    
            var otherColorParameter = otherColor.HasValue ?
                new ObjectParameter("otherColor", otherColor) :
                new ObjectParameter("otherColor", typeof(int));
    
            var wrinkledParameter = wrinkled.HasValue ?
                new ObjectParameter("wrinkled", wrinkled) :
                new ObjectParameter("wrinkled", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddProduct", productNameParameter, createdByParameter, moistureParameter, weaveledParameter, originParameter, purityParameter, splitsParameter, qualityParameter, damagedParameter, foreignMatterParameter, greenDamagedParameter, otherColorParameter, wrinkledParameter);
        }
    
        public virtual int uspAddRecentViewedItem(Nullable<System.DateTime> tr_visitedOn, string tr_pageVisitedState, string tr_pageVisitedParams, string tr_pageTitle, Nullable<int> userID)
        {
            var tr_visitedOnParameter = tr_visitedOn.HasValue ?
                new ObjectParameter("tr_visitedOn", tr_visitedOn) :
                new ObjectParameter("tr_visitedOn", typeof(System.DateTime));
    
            var tr_pageVisitedStateParameter = tr_pageVisitedState != null ?
                new ObjectParameter("tr_pageVisitedState", tr_pageVisitedState) :
                new ObjectParameter("tr_pageVisitedState", typeof(string));
    
            var tr_pageVisitedParamsParameter = tr_pageVisitedParams != null ?
                new ObjectParameter("tr_pageVisitedParams", tr_pageVisitedParams) :
                new ObjectParameter("tr_pageVisitedParams", typeof(string));
    
            var tr_pageTitleParameter = tr_pageTitle != null ?
                new ObjectParameter("tr_pageTitle", tr_pageTitle) :
                new ObjectParameter("tr_pageTitle", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddRecentViewedItem", tr_visitedOnParameter, tr_pageVisitedStateParameter, tr_pageVisitedParamsParameter, tr_pageTitleParameter, userIDParameter);
        }
    
        public virtual int uspAddTransaction(Nullable<long> tr_bpBuyerID, Nullable<long> tr_bpSellerID, Nullable<int> tr_productID, string tr_fileID, string tr_contractID, Nullable<System.DateTime> tr_date, Nullable<int> tr_price, Nullable<bool> tr_FCL, Nullable<bool> tr_MT, Nullable<int> tr_coversion_FCMT, Nullable<int> tr_quantity, Nullable<bool> tr_doniContract, Nullable<bool> tr_ownContract, Nullable<long> tr_contractualBuyer, Nullable<long> tr_broker, string tr_comissonType, Nullable<int> tr_brokerComission, Nullable<int> tr_differance, Nullable<int> tr_discount, Nullable<int> tr_netCommision, Nullable<System.DateTime> tr_shipmentDate, string tr_shipmentAdddress, string tr_shipmentStatus, Nullable<long> tr_shipperID, Nullable<int> tr_createdBy, Nullable<int> tr_washOutValue, string tr_shipmentCountry, Nullable<int> tr_commission, string tr_transactionStatus, Nullable<bool> tr_brokerInvolved)
        {
            var tr_bpBuyerIDParameter = tr_bpBuyerID.HasValue ?
                new ObjectParameter("tr_bpBuyerID", tr_bpBuyerID) :
                new ObjectParameter("tr_bpBuyerID", typeof(long));
    
            var tr_bpSellerIDParameter = tr_bpSellerID.HasValue ?
                new ObjectParameter("tr_bpSellerID", tr_bpSellerID) :
                new ObjectParameter("tr_bpSellerID", typeof(long));
    
            var tr_productIDParameter = tr_productID.HasValue ?
                new ObjectParameter("tr_productID", tr_productID) :
                new ObjectParameter("tr_productID", typeof(int));
    
            var tr_fileIDParameter = tr_fileID != null ?
                new ObjectParameter("tr_fileID", tr_fileID) :
                new ObjectParameter("tr_fileID", typeof(string));
    
            var tr_contractIDParameter = tr_contractID != null ?
                new ObjectParameter("tr_contractID", tr_contractID) :
                new ObjectParameter("tr_contractID", typeof(string));
    
            var tr_dateParameter = tr_date.HasValue ?
                new ObjectParameter("tr_date", tr_date) :
                new ObjectParameter("tr_date", typeof(System.DateTime));
    
            var tr_priceParameter = tr_price.HasValue ?
                new ObjectParameter("tr_price", tr_price) :
                new ObjectParameter("tr_price", typeof(int));
    
            var tr_FCLParameter = tr_FCL.HasValue ?
                new ObjectParameter("tr_FCL", tr_FCL) :
                new ObjectParameter("tr_FCL", typeof(bool));
    
            var tr_MTParameter = tr_MT.HasValue ?
                new ObjectParameter("tr_MT", tr_MT) :
                new ObjectParameter("tr_MT", typeof(bool));
    
            var tr_coversion_FCMTParameter = tr_coversion_FCMT.HasValue ?
                new ObjectParameter("tr_coversion_FCMT", tr_coversion_FCMT) :
                new ObjectParameter("tr_coversion_FCMT", typeof(int));
    
            var tr_quantityParameter = tr_quantity.HasValue ?
                new ObjectParameter("tr_quantity", tr_quantity) :
                new ObjectParameter("tr_quantity", typeof(int));
    
            var tr_doniContractParameter = tr_doniContract.HasValue ?
                new ObjectParameter("tr_doniContract", tr_doniContract) :
                new ObjectParameter("tr_doniContract", typeof(bool));
    
            var tr_ownContractParameter = tr_ownContract.HasValue ?
                new ObjectParameter("tr_ownContract", tr_ownContract) :
                new ObjectParameter("tr_ownContract", typeof(bool));
    
            var tr_contractualBuyerParameter = tr_contractualBuyer.HasValue ?
                new ObjectParameter("tr_contractualBuyer", tr_contractualBuyer) :
                new ObjectParameter("tr_contractualBuyer", typeof(long));
    
            var tr_brokerParameter = tr_broker.HasValue ?
                new ObjectParameter("tr_broker", tr_broker) :
                new ObjectParameter("tr_broker", typeof(long));
    
            var tr_comissonTypeParameter = tr_comissonType != null ?
                new ObjectParameter("tr_comissonType", tr_comissonType) :
                new ObjectParameter("tr_comissonType", typeof(string));
    
            var tr_brokerComissionParameter = tr_brokerComission.HasValue ?
                new ObjectParameter("tr_brokerComission", tr_brokerComission) :
                new ObjectParameter("tr_brokerComission", typeof(int));
    
            var tr_differanceParameter = tr_differance.HasValue ?
                new ObjectParameter("tr_differance", tr_differance) :
                new ObjectParameter("tr_differance", typeof(int));
    
            var tr_discountParameter = tr_discount.HasValue ?
                new ObjectParameter("tr_discount", tr_discount) :
                new ObjectParameter("tr_discount", typeof(int));
    
            var tr_netCommisionParameter = tr_netCommision.HasValue ?
                new ObjectParameter("tr_netCommision", tr_netCommision) :
                new ObjectParameter("tr_netCommision", typeof(int));
    
            var tr_shipmentDateParameter = tr_shipmentDate.HasValue ?
                new ObjectParameter("tr_shipmentDate", tr_shipmentDate) :
                new ObjectParameter("tr_shipmentDate", typeof(System.DateTime));
    
            var tr_shipmentAdddressParameter = tr_shipmentAdddress != null ?
                new ObjectParameter("tr_shipmentAdddress", tr_shipmentAdddress) :
                new ObjectParameter("tr_shipmentAdddress", typeof(string));
    
            var tr_shipmentStatusParameter = tr_shipmentStatus != null ?
                new ObjectParameter("tr_shipmentStatus", tr_shipmentStatus) :
                new ObjectParameter("tr_shipmentStatus", typeof(string));
    
            var tr_shipperIDParameter = tr_shipperID.HasValue ?
                new ObjectParameter("tr_shipperID", tr_shipperID) :
                new ObjectParameter("tr_shipperID", typeof(long));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            var tr_washOutValueParameter = tr_washOutValue.HasValue ?
                new ObjectParameter("tr_washOutValue", tr_washOutValue) :
                new ObjectParameter("tr_washOutValue", typeof(int));
    
            var tr_shipmentCountryParameter = tr_shipmentCountry != null ?
                new ObjectParameter("tr_shipmentCountry", tr_shipmentCountry) :
                new ObjectParameter("tr_shipmentCountry", typeof(string));
    
            var tr_commissionParameter = tr_commission.HasValue ?
                new ObjectParameter("tr_commission", tr_commission) :
                new ObjectParameter("tr_commission", typeof(int));
    
            var tr_transactionStatusParameter = tr_transactionStatus != null ?
                new ObjectParameter("tr_transactionStatus", tr_transactionStatus) :
                new ObjectParameter("tr_transactionStatus", typeof(string));
    
            var tr_brokerInvolvedParameter = tr_brokerInvolved.HasValue ?
                new ObjectParameter("tr_brokerInvolved", tr_brokerInvolved) :
                new ObjectParameter("tr_brokerInvolved", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddTransaction", tr_bpBuyerIDParameter, tr_bpSellerIDParameter, tr_productIDParameter, tr_fileIDParameter, tr_contractIDParameter, tr_dateParameter, tr_priceParameter, tr_FCLParameter, tr_MTParameter, tr_coversion_FCMTParameter, tr_quantityParameter, tr_doniContractParameter, tr_ownContractParameter, tr_contractualBuyerParameter, tr_brokerParameter, tr_comissonTypeParameter, tr_brokerComissionParameter, tr_differanceParameter, tr_discountParameter, tr_netCommisionParameter, tr_shipmentDateParameter, tr_shipmentAdddressParameter, tr_shipmentStatusParameter, tr_shipperIDParameter, tr_createdByParameter, tr_washOutValueParameter, tr_shipmentCountryParameter, tr_commissionParameter, tr_transactionStatusParameter, tr_brokerInvolvedParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> uspAddTransactionBasic(Nullable<System.DateTime> tr_date, Nullable<long> tr_bpBuyerID, Nullable<long> tr_bpSellerID, Nullable<int> tr_productID, string tr_origin, Nullable<int> tr_quantity, Nullable<int> tr_price, string tr_packing, Nullable<System.DateTime> tr_shipment_start, Nullable<System.DateTime> tr_shipment_end, string tr_fileID, string tr_contractID, string tr_other_info, Nullable<int> tr_createdBy, Nullable<System.DateTime> tr_createdOn, Nullable<int> tr_editedBy, Nullable<System.DateTime> tr_editedOn)
        {
            var tr_dateParameter = tr_date.HasValue ?
                new ObjectParameter("tr_date", tr_date) :
                new ObjectParameter("tr_date", typeof(System.DateTime));
    
            var tr_bpBuyerIDParameter = tr_bpBuyerID.HasValue ?
                new ObjectParameter("tr_bpBuyerID", tr_bpBuyerID) :
                new ObjectParameter("tr_bpBuyerID", typeof(long));
    
            var tr_bpSellerIDParameter = tr_bpSellerID.HasValue ?
                new ObjectParameter("tr_bpSellerID", tr_bpSellerID) :
                new ObjectParameter("tr_bpSellerID", typeof(long));
    
            var tr_productIDParameter = tr_productID.HasValue ?
                new ObjectParameter("tr_productID", tr_productID) :
                new ObjectParameter("tr_productID", typeof(int));
    
            var tr_originParameter = tr_origin != null ?
                new ObjectParameter("tr_origin", tr_origin) :
                new ObjectParameter("tr_origin", typeof(string));
    
            var tr_quantityParameter = tr_quantity.HasValue ?
                new ObjectParameter("tr_quantity", tr_quantity) :
                new ObjectParameter("tr_quantity", typeof(int));
    
            var tr_priceParameter = tr_price.HasValue ?
                new ObjectParameter("tr_price", tr_price) :
                new ObjectParameter("tr_price", typeof(int));
    
            var tr_packingParameter = tr_packing != null ?
                new ObjectParameter("tr_packing", tr_packing) :
                new ObjectParameter("tr_packing", typeof(string));
    
            var tr_shipment_startParameter = tr_shipment_start.HasValue ?
                new ObjectParameter("tr_shipment_start", tr_shipment_start) :
                new ObjectParameter("tr_shipment_start", typeof(System.DateTime));
    
            var tr_shipment_endParameter = tr_shipment_end.HasValue ?
                new ObjectParameter("tr_shipment_end", tr_shipment_end) :
                new ObjectParameter("tr_shipment_end", typeof(System.DateTime));
    
            var tr_fileIDParameter = tr_fileID != null ?
                new ObjectParameter("tr_fileID", tr_fileID) :
                new ObjectParameter("tr_fileID", typeof(string));
    
            var tr_contractIDParameter = tr_contractID != null ?
                new ObjectParameter("tr_contractID", tr_contractID) :
                new ObjectParameter("tr_contractID", typeof(string));
    
            var tr_other_infoParameter = tr_other_info != null ?
                new ObjectParameter("tr_other_info", tr_other_info) :
                new ObjectParameter("tr_other_info", typeof(string));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            var tr_createdOnParameter = tr_createdOn.HasValue ?
                new ObjectParameter("tr_createdOn", tr_createdOn) :
                new ObjectParameter("tr_createdOn", typeof(System.DateTime));
    
            var tr_editedByParameter = tr_editedBy.HasValue ?
                new ObjectParameter("tr_editedBy", tr_editedBy) :
                new ObjectParameter("tr_editedBy", typeof(int));
    
            var tr_editedOnParameter = tr_editedOn.HasValue ?
                new ObjectParameter("tr_editedOn", tr_editedOn) :
                new ObjectParameter("tr_editedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("uspAddTransactionBasic", tr_dateParameter, tr_bpBuyerIDParameter, tr_bpSellerIDParameter, tr_productIDParameter, tr_originParameter, tr_quantityParameter, tr_priceParameter, tr_packingParameter, tr_shipment_startParameter, tr_shipment_endParameter, tr_fileIDParameter, tr_contractIDParameter, tr_other_infoParameter, tr_createdByParameter, tr_createdOnParameter, tr_editedByParameter, tr_editedOnParameter);
        }
    
        public virtual int uspAddTransactionNotes(Nullable<long> tr_ID, string tr_notes, Nullable<int> tr_createdBy)
        {
            var tr_IDParameter = tr_ID.HasValue ?
                new ObjectParameter("tr_ID", tr_ID) :
                new ObjectParameter("tr_ID", typeof(long));
    
            var tr_notesParameter = tr_notes != null ?
                new ObjectParameter("tr_notes", tr_notes) :
                new ObjectParameter("tr_notes", typeof(string));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddTransactionNotes", tr_IDParameter, tr_notesParameter, tr_createdByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckBPPrimaryContactExist(Nullable<long> bp_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckBPPrimaryContactExist", bp_IDParameter);
        }
    
        public virtual int uspDeleteBusinessPartner(Nullable<long> bp_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteBusinessPartner", bp_IDParameter);
        }
    
        public virtual int uspDeleteBusinessPartnerBankDetails(Nullable<long> bankDetails_ID)
        {
            var bankDetails_IDParameter = bankDetails_ID.HasValue ?
                new ObjectParameter("bankDetails_ID", bankDetails_ID) :
                new ObjectParameter("bankDetails_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteBusinessPartnerBankDetails", bankDetails_IDParameter);
        }
    
        public virtual int uspDeleteBusinessPartnerContact(Nullable<long> bp_Cont_ID)
        {
            var bp_Cont_IDParameter = bp_Cont_ID.HasValue ?
                new ObjectParameter("bp_Cont_ID", bp_Cont_ID) :
                new ObjectParameter("bp_Cont_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteBusinessPartnerContact", bp_Cont_IDParameter);
        }
    
        public virtual int uspDeleteBusinessPartnerContactNumber(Nullable<long> ph_ID)
        {
            var ph_IDParameter = ph_ID.HasValue ?
                new ObjectParameter("ph_ID", ph_ID) :
                new ObjectParameter("ph_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteBusinessPartnerContactNumber", ph_IDParameter);
        }
    
        public virtual int uspDeleteBusinessPartnerEmail(Nullable<long> email_ID)
        {
            var email_IDParameter = email_ID.HasValue ?
                new ObjectParameter("email_ID", email_ID) :
                new ObjectParameter("email_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteBusinessPartnerEmail", email_IDParameter);
        }
    
        public virtual int uspDeleteBusinessPartnerProducts(Nullable<long> bp_ID, Nullable<int> prod_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            var prod_IDParameter = prod_ID.HasValue ?
                new ObjectParameter("prod_ID", prod_ID) :
                new ObjectParameter("prod_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteBusinessPartnerProducts", bp_IDParameter, prod_IDParameter);
        }
    
        public virtual int uspDeleteProduct(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteProduct", productIdParameter);
        }
    
        public virtual int uspDeleteTransaction(Nullable<long> tr_transactionID)
        {
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteTransaction", tr_transactionIDParameter);
        }
    
        public virtual int uspDeleteTransactionNotes(Nullable<long> tr_NotesID, Nullable<long> tr_ID)
        {
            var tr_NotesIDParameter = tr_NotesID.HasValue ?
                new ObjectParameter("tr_NotesID", tr_NotesID) :
                new ObjectParameter("tr_NotesID", typeof(long));
    
            var tr_IDParameter = tr_ID.HasValue ?
                new ObjectParameter("tr_ID", tr_ID) :
                new ObjectParameter("tr_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteTransactionNotes", tr_NotesIDParameter, tr_IDParameter);
        }
    
        public virtual ObjectResult<uspGetAppUserByEmail_Result> uspGetAppUserByEmail(string userEmail)
        {
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("userEmail", userEmail) :
                new ObjectParameter("userEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetAppUserByEmail_Result>("uspGetAppUserByEmail", userEmailParameter);
        }
    
        public virtual ObjectResult<uspGetBPBank_Result> uspGetBPBank(Nullable<long> bp_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBPBank_Result>("uspGetBPBank", bp_IDParameter);
        }
    
        public virtual ObjectResult<uspGetBPContact_Result> uspGetBPContact(Nullable<long> bp_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBPContact_Result>("uspGetBPContact", bp_IDParameter);
        }
    
        public virtual ObjectResult<uspGetBPContactNumber_Result> uspGetBPContactNumber(Nullable<long> bp_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBPContactNumber_Result>("uspGetBPContactNumber", bp_IDParameter);
        }
    
        public virtual ObjectResult<uspGetBPEmails_Result> uspGetBPEmails(Nullable<long> bp_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBPEmails_Result>("uspGetBPEmails", bp_IDParameter);
        }
    
        public virtual ObjectResult<uspGetBPGeneral_Result> uspGetBPGeneral(Nullable<long> bp_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBPGeneral_Result>("uspGetBPGeneral", bp_IDParameter);
        }
    
        public virtual ObjectResult<uspGetBPProducts_Result> uspGetBPProducts(Nullable<long> bp_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBPProducts_Result>("uspGetBPProducts", bp_IDParameter);
        }
    
        public virtual ObjectResult<uspGetBusinessPartnerForList_Result> uspGetBusinessPartnerForList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBusinessPartnerForList_Result>("uspGetBusinessPartnerForList");
        }
    
        public virtual ObjectResult<uspGetBusinessPartnerForTable_Result> uspGetBusinessPartnerForTable()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetBusinessPartnerForTable_Result>("uspGetBusinessPartnerForTable");
        }
    
        public virtual ObjectResult<uspGetCommissionTransaction_Result> uspGetCommissionTransaction(Nullable<long> tr_transactionID)
        {
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetCommissionTransaction_Result>("uspGetCommissionTransaction", tr_transactionIDParameter);
        }
    
        public virtual ObjectResult<uspGetDropDownBroker_Result> uspGetDropDownBroker()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDropDownBroker_Result>("uspGetDropDownBroker");
        }
    
        public virtual ObjectResult<uspGetDropDownBuyer_Result> uspGetDropDownBuyer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDropDownBuyer_Result>("uspGetDropDownBuyer");
        }
    
        public virtual ObjectResult<uspGetDropDownSeller_Result> uspGetDropDownSeller()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDropDownSeller_Result>("uspGetDropDownSeller");
        }
    
        public virtual ObjectResult<uspGetDropDownShipper_Result> uspGetDropDownShipper()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetDropDownShipper_Result>("uspGetDropDownShipper");
        }
    
        public virtual ObjectResult<uspGetOriginList_Result> uspGetOriginList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetOriginList_Result>("uspGetOriginList");
        }
    
        public virtual ObjectResult<uspGetProductList_Result> uspGetProductList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProductList_Result>("uspGetProductList");
        }
    
        public virtual ObjectResult<uspGetProductListPDF_Result> uspGetProductListPDF()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProductListPDF_Result>("uspGetProductListPDF");
        }
    
        public virtual ObjectResult<uspGetProductTagInput_Result> uspGetProductTagInput(string input)
        {
            var inputParameter = input != null ?
                new ObjectParameter("input", input) :
                new ObjectParameter("input", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProductTagInput_Result>("uspGetProductTagInput", inputParameter);
        }
    
        public virtual ObjectResult<uspGetRecentlyViewedItem_Result> uspGetRecentlyViewedItem(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetRecentlyViewedItem_Result>("uspGetRecentlyViewedItem", userIDParameter);
        }
    
        public virtual ObjectResult<uspGetSecondaryTransaction_Result> uspGetSecondaryTransaction(Nullable<long> tr_transactionID)
        {
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetSecondaryTransaction_Result>("uspGetSecondaryTransaction", tr_transactionIDParameter);
        }
    
        public virtual ObjectResult<uspGetSingleProduct_Result> uspGetSingleProduct(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetSingleProduct_Result>("uspGetSingleProduct", productIdParameter);
        }
    
        public virtual int uspGetTableFilters()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetTableFilters");
        }
    
        public virtual ObjectResult<uspGetTransaction_Result> uspGetTransaction(Nullable<long> tr_transactionID)
        {
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTransaction_Result>("uspGetTransaction", tr_transactionIDParameter);
        }
    
        public virtual ObjectResult<uspGetTransactionByParameter_Result> uspGetTransactionByParameter(string parameter, string textInput, Nullable<System.DateTime> dateInput)
        {
            var parameterParameter = parameter != null ?
                new ObjectParameter("parameter", parameter) :
                new ObjectParameter("parameter", typeof(string));
    
            var textInputParameter = textInput != null ?
                new ObjectParameter("textInput", textInput) :
                new ObjectParameter("textInput", typeof(string));
    
            var dateInputParameter = dateInput.HasValue ?
                new ObjectParameter("dateInput", dateInput) :
                new ObjectParameter("dateInput", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTransactionByParameter_Result>("uspGetTransactionByParameter", parameterParameter, textInputParameter, dateInputParameter);
        }
    
        public virtual ObjectResult<uspGetTransactionContract_Result> uspGetTransactionContract(Nullable<long> tr_transactionId)
        {
            var tr_transactionIdParameter = tr_transactionId.HasValue ?
                new ObjectParameter("tr_transactionId", tr_transactionId) :
                new ObjectParameter("tr_transactionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTransactionContract_Result>("uspGetTransactionContract", tr_transactionIdParameter);
        }
    
        public virtual ObjectResult<uspGetTransactionNotes_Result> uspGetTransactionNotes(Nullable<long> tr_transactionId)
        {
            var tr_transactionIdParameter = tr_transactionId.HasValue ?
                new ObjectParameter("tr_transactionId", tr_transactionId) :
                new ObjectParameter("tr_transactionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTransactionNotes_Result>("uspGetTransactionNotes", tr_transactionIdParameter);
        }
    
        public virtual ObjectResult<uspGetTransactionShipment_Result> uspGetTransactionShipment(Nullable<long> tr_transactionId)
        {
            var tr_transactionIdParameter = tr_transactionId.HasValue ?
                new ObjectParameter("tr_transactionId", tr_transactionId) :
                new ObjectParameter("tr_transactionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTransactionShipment_Result>("uspGetTransactionShipment", tr_transactionIdParameter);
        }
    
        public virtual int uspGetTransactionsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetTransactionsList");
        }
    
        public virtual ObjectResult<uspGetTransactionStatus_Result> uspGetTransactionStatus(Nullable<long> tr_transactionId)
        {
            var tr_transactionIdParameter = tr_transactionId.HasValue ?
                new ObjectParameter("tr_transactionId", tr_transactionId) :
                new ObjectParameter("tr_transactionId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetTransactionStatus_Result>("uspGetTransactionStatus", tr_transactionIdParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> uspOriginCRUD(string crudOperation, Nullable<long> origin_id, string origin_name)
        {
            var crudOperationParameter = crudOperation != null ?
                new ObjectParameter("crudOperation", crudOperation) :
                new ObjectParameter("crudOperation", typeof(string));
    
            var origin_idParameter = origin_id.HasValue ?
                new ObjectParameter("origin_id", origin_id) :
                new ObjectParameter("origin_id", typeof(long));
    
            var origin_nameParameter = origin_name != null ?
                new ObjectParameter("origin_name", origin_name) :
                new ObjectParameter("origin_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("uspOriginCRUD", crudOperationParameter, origin_idParameter, origin_nameParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> uspTransactionBasicCRUD(string crudOperation, Nullable<long> tr_transactionID, Nullable<System.DateTime> tr_date, Nullable<long> tr_bpBuyerID, Nullable<long> tr_bpSellerID, Nullable<int> tr_productID, string tr_origin, Nullable<int> tr_quantity, Nullable<int> tr_price, string tr_packing, Nullable<System.DateTime> tr_shipment_start, Nullable<System.DateTime> tr_shipment_end, string tr_fileID, string tr_contractID, string tr_other_info, Nullable<int> tr_createdBy, Nullable<int> tr_editedBy)
        {
            var crudOperationParameter = crudOperation != null ?
                new ObjectParameter("crudOperation", crudOperation) :
                new ObjectParameter("crudOperation", typeof(string));
    
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            var tr_dateParameter = tr_date.HasValue ?
                new ObjectParameter("tr_date", tr_date) :
                new ObjectParameter("tr_date", typeof(System.DateTime));
    
            var tr_bpBuyerIDParameter = tr_bpBuyerID.HasValue ?
                new ObjectParameter("tr_bpBuyerID", tr_bpBuyerID) :
                new ObjectParameter("tr_bpBuyerID", typeof(long));
    
            var tr_bpSellerIDParameter = tr_bpSellerID.HasValue ?
                new ObjectParameter("tr_bpSellerID", tr_bpSellerID) :
                new ObjectParameter("tr_bpSellerID", typeof(long));
    
            var tr_productIDParameter = tr_productID.HasValue ?
                new ObjectParameter("tr_productID", tr_productID) :
                new ObjectParameter("tr_productID", typeof(int));
    
            var tr_originParameter = tr_origin != null ?
                new ObjectParameter("tr_origin", tr_origin) :
                new ObjectParameter("tr_origin", typeof(string));
    
            var tr_quantityParameter = tr_quantity.HasValue ?
                new ObjectParameter("tr_quantity", tr_quantity) :
                new ObjectParameter("tr_quantity", typeof(int));
    
            var tr_priceParameter = tr_price.HasValue ?
                new ObjectParameter("tr_price", tr_price) :
                new ObjectParameter("tr_price", typeof(int));
    
            var tr_packingParameter = tr_packing != null ?
                new ObjectParameter("tr_packing", tr_packing) :
                new ObjectParameter("tr_packing", typeof(string));
    
            var tr_shipment_startParameter = tr_shipment_start.HasValue ?
                new ObjectParameter("tr_shipment_start", tr_shipment_start) :
                new ObjectParameter("tr_shipment_start", typeof(System.DateTime));
    
            var tr_shipment_endParameter = tr_shipment_end.HasValue ?
                new ObjectParameter("tr_shipment_end", tr_shipment_end) :
                new ObjectParameter("tr_shipment_end", typeof(System.DateTime));
    
            var tr_fileIDParameter = tr_fileID != null ?
                new ObjectParameter("tr_fileID", tr_fileID) :
                new ObjectParameter("tr_fileID", typeof(string));
    
            var tr_contractIDParameter = tr_contractID != null ?
                new ObjectParameter("tr_contractID", tr_contractID) :
                new ObjectParameter("tr_contractID", typeof(string));
    
            var tr_other_infoParameter = tr_other_info != null ?
                new ObjectParameter("tr_other_info", tr_other_info) :
                new ObjectParameter("tr_other_info", typeof(string));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            var tr_editedByParameter = tr_editedBy.HasValue ?
                new ObjectParameter("tr_editedBy", tr_editedBy) :
                new ObjectParameter("tr_editedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("uspTransactionBasicCRUD", crudOperationParameter, tr_transactionIDParameter, tr_dateParameter, tr_bpBuyerIDParameter, tr_bpSellerIDParameter, tr_productIDParameter, tr_originParameter, tr_quantityParameter, tr_priceParameter, tr_packingParameter, tr_shipment_startParameter, tr_shipment_endParameter, tr_fileIDParameter, tr_contractIDParameter, tr_other_infoParameter, tr_createdByParameter, tr_editedByParameter);
        }
    
        public virtual int uspTransactionCommissionCRUD(string crudOperation, Nullable<long> tr_transactionID, Nullable<bool> tr_brokerInvolved, Nullable<bool> tr_sellerBroker, Nullable<long> tr_sellerBrokerID, string tr_sellerBroker_comm_type, Nullable<int> tr_sellerBroker_comm, Nullable<bool> tr_buyerBroker, Nullable<long> tr_buyerBrokerID, string tr_buyerBroker_comm_type, Nullable<int> tr_buyerBroker_comm, Nullable<int> tr_own_Commission, string tr_ownCommissionType, Nullable<int> tr_difference, Nullable<int> tr_discount, Nullable<int> tr_netCommission, Nullable<int> tr_createdBy, Nullable<System.DateTime> tr_createdOn, Nullable<int> tr_editedBy, Nullable<System.DateTime> tr_editedOn)
        {
            var crudOperationParameter = crudOperation != null ?
                new ObjectParameter("crudOperation", crudOperation) :
                new ObjectParameter("crudOperation", typeof(string));
    
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            var tr_brokerInvolvedParameter = tr_brokerInvolved.HasValue ?
                new ObjectParameter("tr_brokerInvolved", tr_brokerInvolved) :
                new ObjectParameter("tr_brokerInvolved", typeof(bool));
    
            var tr_sellerBrokerParameter = tr_sellerBroker.HasValue ?
                new ObjectParameter("tr_sellerBroker", tr_sellerBroker) :
                new ObjectParameter("tr_sellerBroker", typeof(bool));
    
            var tr_sellerBrokerIDParameter = tr_sellerBrokerID.HasValue ?
                new ObjectParameter("tr_sellerBrokerID", tr_sellerBrokerID) :
                new ObjectParameter("tr_sellerBrokerID", typeof(long));
    
            var tr_sellerBroker_comm_typeParameter = tr_sellerBroker_comm_type != null ?
                new ObjectParameter("tr_sellerBroker_comm_type", tr_sellerBroker_comm_type) :
                new ObjectParameter("tr_sellerBroker_comm_type", typeof(string));
    
            var tr_sellerBroker_commParameter = tr_sellerBroker_comm.HasValue ?
                new ObjectParameter("tr_sellerBroker_comm", tr_sellerBroker_comm) :
                new ObjectParameter("tr_sellerBroker_comm", typeof(int));
    
            var tr_buyerBrokerParameter = tr_buyerBroker.HasValue ?
                new ObjectParameter("tr_buyerBroker", tr_buyerBroker) :
                new ObjectParameter("tr_buyerBroker", typeof(bool));
    
            var tr_buyerBrokerIDParameter = tr_buyerBrokerID.HasValue ?
                new ObjectParameter("tr_buyerBrokerID", tr_buyerBrokerID) :
                new ObjectParameter("tr_buyerBrokerID", typeof(long));
    
            var tr_buyerBroker_comm_typeParameter = tr_buyerBroker_comm_type != null ?
                new ObjectParameter("tr_buyerBroker_comm_type", tr_buyerBroker_comm_type) :
                new ObjectParameter("tr_buyerBroker_comm_type", typeof(string));
    
            var tr_buyerBroker_commParameter = tr_buyerBroker_comm.HasValue ?
                new ObjectParameter("tr_buyerBroker_comm", tr_buyerBroker_comm) :
                new ObjectParameter("tr_buyerBroker_comm", typeof(int));
    
            var tr_own_CommissionParameter = tr_own_Commission.HasValue ?
                new ObjectParameter("tr_own_Commission", tr_own_Commission) :
                new ObjectParameter("tr_own_Commission", typeof(int));
    
            var tr_ownCommissionTypeParameter = tr_ownCommissionType != null ?
                new ObjectParameter("tr_ownCommissionType", tr_ownCommissionType) :
                new ObjectParameter("tr_ownCommissionType", typeof(string));
    
            var tr_differenceParameter = tr_difference.HasValue ?
                new ObjectParameter("tr_difference", tr_difference) :
                new ObjectParameter("tr_difference", typeof(int));
    
            var tr_discountParameter = tr_discount.HasValue ?
                new ObjectParameter("tr_discount", tr_discount) :
                new ObjectParameter("tr_discount", typeof(int));
    
            var tr_netCommissionParameter = tr_netCommission.HasValue ?
                new ObjectParameter("tr_netCommission", tr_netCommission) :
                new ObjectParameter("tr_netCommission", typeof(int));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            var tr_createdOnParameter = tr_createdOn.HasValue ?
                new ObjectParameter("tr_createdOn", tr_createdOn) :
                new ObjectParameter("tr_createdOn", typeof(System.DateTime));
    
            var tr_editedByParameter = tr_editedBy.HasValue ?
                new ObjectParameter("tr_editedBy", tr_editedBy) :
                new ObjectParameter("tr_editedBy", typeof(int));
    
            var tr_editedOnParameter = tr_editedOn.HasValue ?
                new ObjectParameter("tr_editedOn", tr_editedOn) :
                new ObjectParameter("tr_editedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTransactionCommissionCRUD", crudOperationParameter, tr_transactionIDParameter, tr_brokerInvolvedParameter, tr_sellerBrokerParameter, tr_sellerBrokerIDParameter, tr_sellerBroker_comm_typeParameter, tr_sellerBroker_commParameter, tr_buyerBrokerParameter, tr_buyerBrokerIDParameter, tr_buyerBroker_comm_typeParameter, tr_buyerBroker_commParameter, tr_own_CommissionParameter, tr_ownCommissionTypeParameter, tr_differenceParameter, tr_discountParameter, tr_netCommissionParameter, tr_createdByParameter, tr_createdOnParameter, tr_editedByParameter, tr_editedOnParameter);
        }
    
        public virtual int uspTransactionContractCRUD(string crudOperation, Nullable<long> tr_transactionID, Nullable<bool> tr_doniContract, Nullable<bool> tr_ownContract, Nullable<long> tr_ContractualBuyer, Nullable<int> tr_createdBy, Nullable<int> tr_editedBy)
        {
            var crudOperationParameter = crudOperation != null ?
                new ObjectParameter("crudOperation", crudOperation) :
                new ObjectParameter("crudOperation", typeof(string));
    
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            var tr_doniContractParameter = tr_doniContract.HasValue ?
                new ObjectParameter("tr_doniContract", tr_doniContract) :
                new ObjectParameter("tr_doniContract", typeof(bool));
    
            var tr_ownContractParameter = tr_ownContract.HasValue ?
                new ObjectParameter("tr_ownContract", tr_ownContract) :
                new ObjectParameter("tr_ownContract", typeof(bool));
    
            var tr_ContractualBuyerParameter = tr_ContractualBuyer.HasValue ?
                new ObjectParameter("tr_ContractualBuyer", tr_ContractualBuyer) :
                new ObjectParameter("tr_ContractualBuyer", typeof(long));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            var tr_editedByParameter = tr_editedBy.HasValue ?
                new ObjectParameter("tr_editedBy", tr_editedBy) :
                new ObjectParameter("tr_editedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTransactionContractCRUD", crudOperationParameter, tr_transactionIDParameter, tr_doniContractParameter, tr_ownContractParameter, tr_ContractualBuyerParameter, tr_createdByParameter, tr_editedByParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspTransactionFileAdd(Nullable<long> tf_transactionID, byte[] tf_file, string tf_fileType, string tf_fileName, Nullable<int> tf_createdBy)
        {
            var tf_transactionIDParameter = tf_transactionID.HasValue ?
                new ObjectParameter("tf_transactionID", tf_transactionID) :
                new ObjectParameter("tf_transactionID", typeof(long));
    
            var tf_fileParameter = tf_file != null ?
                new ObjectParameter("tf_file", tf_file) :
                new ObjectParameter("tf_file", typeof(byte[]));
    
            var tf_fileTypeParameter = tf_fileType != null ?
                new ObjectParameter("tf_fileType", tf_fileType) :
                new ObjectParameter("tf_fileType", typeof(string));
    
            var tf_fileNameParameter = tf_fileName != null ?
                new ObjectParameter("tf_fileName", tf_fileName) :
                new ObjectParameter("tf_fileName", typeof(string));
    
            var tf_createdByParameter = tf_createdBy.HasValue ?
                new ObjectParameter("tf_createdBy", tf_createdBy) :
                new ObjectParameter("tf_createdBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspTransactionFileAdd", tf_transactionIDParameter, tf_fileParameter, tf_fileTypeParameter, tf_fileNameParameter, tf_createdByParameter);
        }
    
        public virtual int uspTransactionFileDelete(Nullable<long> tf_fileID)
        {
            var tf_fileIDParameter = tf_fileID.HasValue ?
                new ObjectParameter("tf_fileID", tf_fileID) :
                new ObjectParameter("tf_fileID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTransactionFileDelete", tf_fileIDParameter);
        }
    
        public virtual ObjectResult<uspTransactionFileGetAll_Result> uspTransactionFileGetAll(Nullable<long> tf_transactionID)
        {
            var tf_transactionIDParameter = tf_transactionID.HasValue ?
                new ObjectParameter("tf_transactionID", tf_transactionID) :
                new ObjectParameter("tf_transactionID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspTransactionFileGetAll_Result>("uspTransactionFileGetAll", tf_transactionIDParameter);
        }
    
        public virtual ObjectResult<uspTransactionFileGetSingle_Result> uspTransactionFileGetSingle(Nullable<long> tf_fileID)
        {
            var tf_fileIDParameter = tf_fileID.HasValue ?
                new ObjectParameter("tf_fileID", tf_fileID) :
                new ObjectParameter("tf_fileID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspTransactionFileGetSingle_Result>("uspTransactionFileGetSingle", tf_fileIDParameter);
        }
    
        public virtual ObjectResult<uspTransactionList_Result> uspTransactionList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspTransactionList_Result>("uspTransactionList");
        }
    
        public virtual ObjectResult<uspTransactionListByDateRange_Result> uspTransactionListByDateRange(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspTransactionListByDateRange_Result>("uspTransactionListByDateRange", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<uspTransactionNotesCRUD_Result> uspTransactionNotesCRUD(string crudOperation, Nullable<long> tr_transactionID, Nullable<long> tr_tranNoteID, string tr_transactionNotes, Nullable<int> tr_createdBy)
        {
            var crudOperationParameter = crudOperation != null ?
                new ObjectParameter("crudOperation", crudOperation) :
                new ObjectParameter("crudOperation", typeof(string));
    
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            var tr_tranNoteIDParameter = tr_tranNoteID.HasValue ?
                new ObjectParameter("tr_tranNoteID", tr_tranNoteID) :
                new ObjectParameter("tr_tranNoteID", typeof(long));
    
            var tr_transactionNotesParameter = tr_transactionNotes != null ?
                new ObjectParameter("tr_transactionNotes", tr_transactionNotes) :
                new ObjectParameter("tr_transactionNotes", typeof(string));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspTransactionNotesCRUD_Result>("uspTransactionNotesCRUD", crudOperationParameter, tr_transactionIDParameter, tr_tranNoteIDParameter, tr_transactionNotesParameter, tr_createdByParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> uspTransactionSecondaryCRUD(string crudOperation, Nullable<long> tr_transactionID, Nullable<long> tr_sec_bpBuyerID, Nullable<long> tr_sec_bpSellerID, Nullable<System.DateTime> tr_sec_date, Nullable<int> tr_sec_buyerPrice, Nullable<int> tr_sec_sellerPrice, string tr_sec_otherInfo, Nullable<int> tr_createdBy, Nullable<int> tr_editedBy, Nullable<long> tr_sec_tranID)
        {
            var crudOperationParameter = crudOperation != null ?
                new ObjectParameter("crudOperation", crudOperation) :
                new ObjectParameter("crudOperation", typeof(string));
    
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            var tr_sec_bpBuyerIDParameter = tr_sec_bpBuyerID.HasValue ?
                new ObjectParameter("tr_sec_bpBuyerID", tr_sec_bpBuyerID) :
                new ObjectParameter("tr_sec_bpBuyerID", typeof(long));
    
            var tr_sec_bpSellerIDParameter = tr_sec_bpSellerID.HasValue ?
                new ObjectParameter("tr_sec_bpSellerID", tr_sec_bpSellerID) :
                new ObjectParameter("tr_sec_bpSellerID", typeof(long));
    
            var tr_sec_dateParameter = tr_sec_date.HasValue ?
                new ObjectParameter("tr_sec_date", tr_sec_date) :
                new ObjectParameter("tr_sec_date", typeof(System.DateTime));
    
            var tr_sec_buyerPriceParameter = tr_sec_buyerPrice.HasValue ?
                new ObjectParameter("tr_sec_buyerPrice", tr_sec_buyerPrice) :
                new ObjectParameter("tr_sec_buyerPrice", typeof(int));
    
            var tr_sec_sellerPriceParameter = tr_sec_sellerPrice.HasValue ?
                new ObjectParameter("tr_sec_sellerPrice", tr_sec_sellerPrice) :
                new ObjectParameter("tr_sec_sellerPrice", typeof(int));
    
            var tr_sec_otherInfoParameter = tr_sec_otherInfo != null ?
                new ObjectParameter("tr_sec_otherInfo", tr_sec_otherInfo) :
                new ObjectParameter("tr_sec_otherInfo", typeof(string));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            var tr_editedByParameter = tr_editedBy.HasValue ?
                new ObjectParameter("tr_editedBy", tr_editedBy) :
                new ObjectParameter("tr_editedBy", typeof(int));
    
            var tr_sec_tranIDParameter = tr_sec_tranID.HasValue ?
                new ObjectParameter("tr_sec_tranID", tr_sec_tranID) :
                new ObjectParameter("tr_sec_tranID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("uspTransactionSecondaryCRUD", crudOperationParameter, tr_transactionIDParameter, tr_sec_bpBuyerIDParameter, tr_sec_bpSellerIDParameter, tr_sec_dateParameter, tr_sec_buyerPriceParameter, tr_sec_sellerPriceParameter, tr_sec_otherInfoParameter, tr_createdByParameter, tr_editedByParameter, tr_sec_tranIDParameter);
        }
    
        public virtual int uspTransactionShipmentCRUD(string crudOperation, Nullable<long> tr_transactionID, Nullable<bool> tr_ship_notShipped, string tr_ship_notShipped_reason, string tr_ship_extension, Nullable<bool> tr_ship_appReceived, Nullable<System.DateTime> tr_expectedShipment, Nullable<System.DateTime> tr_inTransit, Nullable<bool> tr_shipped, Nullable<System.DateTime> tr_dateShipped, Nullable<System.DateTime> tr_expectedArrival, string tr_transitPort, Nullable<bool> tr_ship_arrivedAtPort, Nullable<System.DateTime> tr_dateArrived, Nullable<System.DateTime> tr_actualArrived, string tr_ship_BlNo, string tr_ship_invoiceNo, Nullable<int> tr_ship_invoiceAmt, Nullable<int> tr_ship_quantity, string tr_ship_vesselNo, Nullable<long> tr_ship_primaryShipperId, string tr_ship_portLoad, string tr_ship_portDest, string tr_ship_shipLineCont, Nullable<int> tr_createdBy, Nullable<int> tr_editedBy, Nullable<bool> tr_ship_chk_reason, Nullable<bool> tr_ship_chk_shpExt, Nullable<bool> tr_ship_chk_expShp, Nullable<bool> tr_ship_chk_inTransit, Nullable<bool> tr_ship_chk_dateShipped, Nullable<bool> tr_ship_chk_expArrival, Nullable<bool> tr_ship_chk_transitPort, Nullable<bool> tr_ship_chk_dateArrived, Nullable<bool> tr_ship_chk_actualArrived)
        {
            var crudOperationParameter = crudOperation != null ?
                new ObjectParameter("crudOperation", crudOperation) :
                new ObjectParameter("crudOperation", typeof(string));
    
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            var tr_ship_notShippedParameter = tr_ship_notShipped.HasValue ?
                new ObjectParameter("tr_ship_notShipped", tr_ship_notShipped) :
                new ObjectParameter("tr_ship_notShipped", typeof(bool));
    
            var tr_ship_notShipped_reasonParameter = tr_ship_notShipped_reason != null ?
                new ObjectParameter("tr_ship_notShipped_reason", tr_ship_notShipped_reason) :
                new ObjectParameter("tr_ship_notShipped_reason", typeof(string));
    
            var tr_ship_extensionParameter = tr_ship_extension != null ?
                new ObjectParameter("tr_ship_extension", tr_ship_extension) :
                new ObjectParameter("tr_ship_extension", typeof(string));
    
            var tr_ship_appReceivedParameter = tr_ship_appReceived.HasValue ?
                new ObjectParameter("tr_ship_appReceived", tr_ship_appReceived) :
                new ObjectParameter("tr_ship_appReceived", typeof(bool));
    
            var tr_expectedShipmentParameter = tr_expectedShipment.HasValue ?
                new ObjectParameter("tr_expectedShipment", tr_expectedShipment) :
                new ObjectParameter("tr_expectedShipment", typeof(System.DateTime));
    
            var tr_inTransitParameter = tr_inTransit.HasValue ?
                new ObjectParameter("tr_inTransit", tr_inTransit) :
                new ObjectParameter("tr_inTransit", typeof(System.DateTime));
    
            var tr_shippedParameter = tr_shipped.HasValue ?
                new ObjectParameter("tr_shipped", tr_shipped) :
                new ObjectParameter("tr_shipped", typeof(bool));
    
            var tr_dateShippedParameter = tr_dateShipped.HasValue ?
                new ObjectParameter("tr_dateShipped", tr_dateShipped) :
                new ObjectParameter("tr_dateShipped", typeof(System.DateTime));
    
            var tr_expectedArrivalParameter = tr_expectedArrival.HasValue ?
                new ObjectParameter("tr_expectedArrival", tr_expectedArrival) :
                new ObjectParameter("tr_expectedArrival", typeof(System.DateTime));
    
            var tr_transitPortParameter = tr_transitPort != null ?
                new ObjectParameter("tr_transitPort", tr_transitPort) :
                new ObjectParameter("tr_transitPort", typeof(string));
    
            var tr_ship_arrivedAtPortParameter = tr_ship_arrivedAtPort.HasValue ?
                new ObjectParameter("tr_ship_arrivedAtPort", tr_ship_arrivedAtPort) :
                new ObjectParameter("tr_ship_arrivedAtPort", typeof(bool));
    
            var tr_dateArrivedParameter = tr_dateArrived.HasValue ?
                new ObjectParameter("tr_dateArrived", tr_dateArrived) :
                new ObjectParameter("tr_dateArrived", typeof(System.DateTime));
    
            var tr_actualArrivedParameter = tr_actualArrived.HasValue ?
                new ObjectParameter("tr_actualArrived", tr_actualArrived) :
                new ObjectParameter("tr_actualArrived", typeof(System.DateTime));
    
            var tr_ship_BlNoParameter = tr_ship_BlNo != null ?
                new ObjectParameter("tr_ship_BlNo", tr_ship_BlNo) :
                new ObjectParameter("tr_ship_BlNo", typeof(string));
    
            var tr_ship_invoiceNoParameter = tr_ship_invoiceNo != null ?
                new ObjectParameter("tr_ship_invoiceNo", tr_ship_invoiceNo) :
                new ObjectParameter("tr_ship_invoiceNo", typeof(string));
    
            var tr_ship_invoiceAmtParameter = tr_ship_invoiceAmt.HasValue ?
                new ObjectParameter("tr_ship_invoiceAmt", tr_ship_invoiceAmt) :
                new ObjectParameter("tr_ship_invoiceAmt", typeof(int));
    
            var tr_ship_quantityParameter = tr_ship_quantity.HasValue ?
                new ObjectParameter("tr_ship_quantity", tr_ship_quantity) :
                new ObjectParameter("tr_ship_quantity", typeof(int));
    
            var tr_ship_vesselNoParameter = tr_ship_vesselNo != null ?
                new ObjectParameter("tr_ship_vesselNo", tr_ship_vesselNo) :
                new ObjectParameter("tr_ship_vesselNo", typeof(string));
    
            var tr_ship_primaryShipperIdParameter = tr_ship_primaryShipperId.HasValue ?
                new ObjectParameter("tr_ship_primaryShipperId", tr_ship_primaryShipperId) :
                new ObjectParameter("tr_ship_primaryShipperId", typeof(long));
    
            var tr_ship_portLoadParameter = tr_ship_portLoad != null ?
                new ObjectParameter("tr_ship_portLoad", tr_ship_portLoad) :
                new ObjectParameter("tr_ship_portLoad", typeof(string));
    
            var tr_ship_portDestParameter = tr_ship_portDest != null ?
                new ObjectParameter("tr_ship_portDest", tr_ship_portDest) :
                new ObjectParameter("tr_ship_portDest", typeof(string));
    
            var tr_ship_shipLineContParameter = tr_ship_shipLineCont != null ?
                new ObjectParameter("tr_ship_shipLineCont", tr_ship_shipLineCont) :
                new ObjectParameter("tr_ship_shipLineCont", typeof(string));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            var tr_editedByParameter = tr_editedBy.HasValue ?
                new ObjectParameter("tr_editedBy", tr_editedBy) :
                new ObjectParameter("tr_editedBy", typeof(int));
    
            var tr_ship_chk_reasonParameter = tr_ship_chk_reason.HasValue ?
                new ObjectParameter("tr_ship_chk_reason", tr_ship_chk_reason) :
                new ObjectParameter("tr_ship_chk_reason", typeof(bool));
    
            var tr_ship_chk_shpExtParameter = tr_ship_chk_shpExt.HasValue ?
                new ObjectParameter("tr_ship_chk_shpExt", tr_ship_chk_shpExt) :
                new ObjectParameter("tr_ship_chk_shpExt", typeof(bool));
    
            var tr_ship_chk_expShpParameter = tr_ship_chk_expShp.HasValue ?
                new ObjectParameter("tr_ship_chk_expShp", tr_ship_chk_expShp) :
                new ObjectParameter("tr_ship_chk_expShp", typeof(bool));
    
            var tr_ship_chk_inTransitParameter = tr_ship_chk_inTransit.HasValue ?
                new ObjectParameter("tr_ship_chk_inTransit", tr_ship_chk_inTransit) :
                new ObjectParameter("tr_ship_chk_inTransit", typeof(bool));
    
            var tr_ship_chk_dateShippedParameter = tr_ship_chk_dateShipped.HasValue ?
                new ObjectParameter("tr_ship_chk_dateShipped", tr_ship_chk_dateShipped) :
                new ObjectParameter("tr_ship_chk_dateShipped", typeof(bool));
    
            var tr_ship_chk_expArrivalParameter = tr_ship_chk_expArrival.HasValue ?
                new ObjectParameter("tr_ship_chk_expArrival", tr_ship_chk_expArrival) :
                new ObjectParameter("tr_ship_chk_expArrival", typeof(bool));
    
            var tr_ship_chk_transitPortParameter = tr_ship_chk_transitPort.HasValue ?
                new ObjectParameter("tr_ship_chk_transitPort", tr_ship_chk_transitPort) :
                new ObjectParameter("tr_ship_chk_transitPort", typeof(bool));
    
            var tr_ship_chk_dateArrivedParameter = tr_ship_chk_dateArrived.HasValue ?
                new ObjectParameter("tr_ship_chk_dateArrived", tr_ship_chk_dateArrived) :
                new ObjectParameter("tr_ship_chk_dateArrived", typeof(bool));
    
            var tr_ship_chk_actualArrivedParameter = tr_ship_chk_actualArrived.HasValue ?
                new ObjectParameter("tr_ship_chk_actualArrived", tr_ship_chk_actualArrived) :
                new ObjectParameter("tr_ship_chk_actualArrived", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTransactionShipmentCRUD", crudOperationParameter, tr_transactionIDParameter, tr_ship_notShippedParameter, tr_ship_notShipped_reasonParameter, tr_ship_extensionParameter, tr_ship_appReceivedParameter, tr_expectedShipmentParameter, tr_inTransitParameter, tr_shippedParameter, tr_dateShippedParameter, tr_expectedArrivalParameter, tr_transitPortParameter, tr_ship_arrivedAtPortParameter, tr_dateArrivedParameter, tr_actualArrivedParameter, tr_ship_BlNoParameter, tr_ship_invoiceNoParameter, tr_ship_invoiceAmtParameter, tr_ship_quantityParameter, tr_ship_vesselNoParameter, tr_ship_primaryShipperIdParameter, tr_ship_portLoadParameter, tr_ship_portDestParameter, tr_ship_shipLineContParameter, tr_createdByParameter, tr_editedByParameter, tr_ship_chk_reasonParameter, tr_ship_chk_shpExtParameter, tr_ship_chk_expShpParameter, tr_ship_chk_inTransitParameter, tr_ship_chk_dateShippedParameter, tr_ship_chk_expArrivalParameter, tr_ship_chk_transitPortParameter, tr_ship_chk_dateArrivedParameter, tr_ship_chk_actualArrivedParameter);
        }
    
        public virtual int uspTransactionStatusCRUD(string crudOperation, Nullable<long> tr_transactionID, string tr_transactionStatus, Nullable<int> tr_washoutValueAtPar, Nullable<int> tr_createdBy, Nullable<int> tr_editedBy)
        {
            var crudOperationParameter = crudOperation != null ?
                new ObjectParameter("crudOperation", crudOperation) :
                new ObjectParameter("crudOperation", typeof(string));
    
            var tr_transactionIDParameter = tr_transactionID.HasValue ?
                new ObjectParameter("tr_transactionID", tr_transactionID) :
                new ObjectParameter("tr_transactionID", typeof(long));
    
            var tr_transactionStatusParameter = tr_transactionStatus != null ?
                new ObjectParameter("tr_transactionStatus", tr_transactionStatus) :
                new ObjectParameter("tr_transactionStatus", typeof(string));
    
            var tr_washoutValueAtParParameter = tr_washoutValueAtPar.HasValue ?
                new ObjectParameter("tr_washoutValueAtPar", tr_washoutValueAtPar) :
                new ObjectParameter("tr_washoutValueAtPar", typeof(int));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            var tr_editedByParameter = tr_editedBy.HasValue ?
                new ObjectParameter("tr_editedBy", tr_editedBy) :
                new ObjectParameter("tr_editedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspTransactionStatusCRUD", crudOperationParameter, tr_transactionIDParameter, tr_transactionStatusParameter, tr_washoutValueAtParParameter, tr_createdByParameter, tr_editedByParameter);
        }
    
        public virtual int uspUpdateBusinessPartner(Nullable<long> bp_ID, Nullable<bool> isSupplier, Nullable<bool> isBroker, Nullable<bool> isShipper, Nullable<bool> isBuyer, Nullable<bool> onDoniContract, Nullable<int> createdBy, Nullable<int> reliabilityIndex, string bPName, string bPWebsite, string address, string country)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            var isSupplierParameter = isSupplier.HasValue ?
                new ObjectParameter("IsSupplier", isSupplier) :
                new ObjectParameter("IsSupplier", typeof(bool));
    
            var isBrokerParameter = isBroker.HasValue ?
                new ObjectParameter("IsBroker", isBroker) :
                new ObjectParameter("IsBroker", typeof(bool));
    
            var isShipperParameter = isShipper.HasValue ?
                new ObjectParameter("IsShipper", isShipper) :
                new ObjectParameter("IsShipper", typeof(bool));
    
            var isBuyerParameter = isBuyer.HasValue ?
                new ObjectParameter("IsBuyer", isBuyer) :
                new ObjectParameter("IsBuyer", typeof(bool));
    
            var onDoniContractParameter = onDoniContract.HasValue ?
                new ObjectParameter("OnDoniContract", onDoniContract) :
                new ObjectParameter("OnDoniContract", typeof(bool));
    
            var createdByParameter = createdBy.HasValue ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(int));
    
            var reliabilityIndexParameter = reliabilityIndex.HasValue ?
                new ObjectParameter("ReliabilityIndex", reliabilityIndex) :
                new ObjectParameter("ReliabilityIndex", typeof(int));
    
            var bPNameParameter = bPName != null ?
                new ObjectParameter("BPName", bPName) :
                new ObjectParameter("BPName", typeof(string));
    
            var bPWebsiteParameter = bPWebsite != null ?
                new ObjectParameter("BPWebsite", bPWebsite) :
                new ObjectParameter("BPWebsite", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateBusinessPartner", bp_IDParameter, isSupplierParameter, isBrokerParameter, isShipperParameter, isBuyerParameter, onDoniContractParameter, createdByParameter, reliabilityIndexParameter, bPNameParameter, bPWebsiteParameter, addressParameter, countryParameter);
        }
    
        public virtual int uspUpdateBusinessPartnerBankDetails(Nullable<long> bankDetails_ID, Nullable<long> bpID, string branchAddress, string bankName, string accountTitle, string accountNumber, string accountCountry)
        {
            var bankDetails_IDParameter = bankDetails_ID.HasValue ?
                new ObjectParameter("bankDetails_ID", bankDetails_ID) :
                new ObjectParameter("bankDetails_ID", typeof(long));
    
            var bpIDParameter = bpID.HasValue ?
                new ObjectParameter("bpID", bpID) :
                new ObjectParameter("bpID", typeof(long));
    
            var branchAddressParameter = branchAddress != null ?
                new ObjectParameter("branchAddress", branchAddress) :
                new ObjectParameter("branchAddress", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("bankName", bankName) :
                new ObjectParameter("bankName", typeof(string));
    
            var accountTitleParameter = accountTitle != null ?
                new ObjectParameter("AccountTitle", accountTitle) :
                new ObjectParameter("AccountTitle", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var accountCountryParameter = accountCountry != null ?
                new ObjectParameter("AccountCountry", accountCountry) :
                new ObjectParameter("AccountCountry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateBusinessPartnerBankDetails", bankDetails_IDParameter, bpIDParameter, branchAddressParameter, bankNameParameter, accountTitleParameter, accountNumberParameter, accountCountryParameter);
        }
    
        public virtual int uspUpdateBusinessPartnerContact(Nullable<long> bp_cont_ID, Nullable<long> bpId, Nullable<bool> bp_Cont_IsPrimary, string bp_Cont_fullName, string bp_Cont_designation, string bp_Cont_Email, string bp_Cont_PrimaryNumber, string bp_Cont_SecondryNumber, Nullable<int> bp_Cont_EditedBy)
        {
            var bp_cont_IDParameter = bp_cont_ID.HasValue ?
                new ObjectParameter("bp_cont_ID", bp_cont_ID) :
                new ObjectParameter("bp_cont_ID", typeof(long));
    
            var bpIdParameter = bpId.HasValue ?
                new ObjectParameter("bpId", bpId) :
                new ObjectParameter("bpId", typeof(long));
    
            var bp_Cont_IsPrimaryParameter = bp_Cont_IsPrimary.HasValue ?
                new ObjectParameter("bp_Cont_IsPrimary", bp_Cont_IsPrimary) :
                new ObjectParameter("bp_Cont_IsPrimary", typeof(bool));
    
            var bp_Cont_fullNameParameter = bp_Cont_fullName != null ?
                new ObjectParameter("bp_Cont_fullName", bp_Cont_fullName) :
                new ObjectParameter("bp_Cont_fullName", typeof(string));
    
            var bp_Cont_designationParameter = bp_Cont_designation != null ?
                new ObjectParameter("bp_Cont_designation", bp_Cont_designation) :
                new ObjectParameter("bp_Cont_designation", typeof(string));
    
            var bp_Cont_EmailParameter = bp_Cont_Email != null ?
                new ObjectParameter("bp_Cont_Email", bp_Cont_Email) :
                new ObjectParameter("bp_Cont_Email", typeof(string));
    
            var bp_Cont_PrimaryNumberParameter = bp_Cont_PrimaryNumber != null ?
                new ObjectParameter("bp_Cont_PrimaryNumber", bp_Cont_PrimaryNumber) :
                new ObjectParameter("bp_Cont_PrimaryNumber", typeof(string));
    
            var bp_Cont_SecondryNumberParameter = bp_Cont_SecondryNumber != null ?
                new ObjectParameter("bp_Cont_SecondryNumber", bp_Cont_SecondryNumber) :
                new ObjectParameter("bp_Cont_SecondryNumber", typeof(string));
    
            var bp_Cont_EditedByParameter = bp_Cont_EditedBy.HasValue ?
                new ObjectParameter("bp_Cont_EditedBy", bp_Cont_EditedBy) :
                new ObjectParameter("bp_Cont_EditedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateBusinessPartnerContact", bp_cont_IDParameter, bpIdParameter, bp_Cont_IsPrimaryParameter, bp_Cont_fullNameParameter, bp_Cont_designationParameter, bp_Cont_EmailParameter, bp_Cont_PrimaryNumberParameter, bp_Cont_SecondryNumberParameter, bp_Cont_EditedByParameter);
        }
    
        public virtual int uspUpdateBusinessPartnerContactNumber(Nullable<long> ph_ID, Nullable<long> bpID, string contactType, string contactNumber, Nullable<int> editedBy)
        {
            var ph_IDParameter = ph_ID.HasValue ?
                new ObjectParameter("ph_ID", ph_ID) :
                new ObjectParameter("ph_ID", typeof(long));
    
            var bpIDParameter = bpID.HasValue ?
                new ObjectParameter("bpID", bpID) :
                new ObjectParameter("bpID", typeof(long));
    
            var contactTypeParameter = contactType != null ?
                new ObjectParameter("contactType", contactType) :
                new ObjectParameter("contactType", typeof(string));
    
            var contactNumberParameter = contactNumber != null ?
                new ObjectParameter("ContactNumber", contactNumber) :
                new ObjectParameter("ContactNumber", typeof(string));
    
            var editedByParameter = editedBy.HasValue ?
                new ObjectParameter("editedBy", editedBy) :
                new ObjectParameter("editedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateBusinessPartnerContactNumber", ph_IDParameter, bpIDParameter, contactTypeParameter, contactNumberParameter, editedByParameter);
        }
    
        public virtual int uspUpdateBusinessPartnerEmail(Nullable<long> bp_ID, string email)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateBusinessPartnerEmail", bp_IDParameter, emailParameter);
        }
    
        public virtual int uspUpdateBusinessPartnerProduct(Nullable<long> bp_ID, string prod_ID)
        {
            var bp_IDParameter = bp_ID.HasValue ?
                new ObjectParameter("bp_ID", bp_ID) :
                new ObjectParameter("bp_ID", typeof(long));
    
            var prod_IDParameter = prod_ID != null ?
                new ObjectParameter("prod_ID", prod_ID) :
                new ObjectParameter("prod_ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateBusinessPartnerProduct", bp_IDParameter, prod_IDParameter);
        }
    
        public virtual int uspUpdateProduct(Nullable<int> productID, string productName, Nullable<int> moisture, Nullable<int> weaveled, string origin, Nullable<int> purity, Nullable<int> splits, string quality, Nullable<int> updatedBy, Nullable<int> damaged, Nullable<int> foreignMatter, Nullable<int> greenDamaged, Nullable<int> otherColor, Nullable<int> wrinkled)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var moistureParameter = moisture.HasValue ?
                new ObjectParameter("moisture", moisture) :
                new ObjectParameter("moisture", typeof(int));
    
            var weaveledParameter = weaveled.HasValue ?
                new ObjectParameter("weaveled", weaveled) :
                new ObjectParameter("weaveled", typeof(int));
    
            var originParameter = origin != null ?
                new ObjectParameter("origin", origin) :
                new ObjectParameter("origin", typeof(string));
    
            var purityParameter = purity.HasValue ?
                new ObjectParameter("purity", purity) :
                new ObjectParameter("purity", typeof(int));
    
            var splitsParameter = splits.HasValue ?
                new ObjectParameter("splits", splits) :
                new ObjectParameter("splits", typeof(int));
    
            var qualityParameter = quality != null ?
                new ObjectParameter("quality", quality) :
                new ObjectParameter("quality", typeof(string));
    
            var updatedByParameter = updatedBy.HasValue ?
                new ObjectParameter("UpdatedBy", updatedBy) :
                new ObjectParameter("UpdatedBy", typeof(int));
    
            var damagedParameter = damaged.HasValue ?
                new ObjectParameter("damaged", damaged) :
                new ObjectParameter("damaged", typeof(int));
    
            var foreignMatterParameter = foreignMatter.HasValue ?
                new ObjectParameter("foreignMatter", foreignMatter) :
                new ObjectParameter("foreignMatter", typeof(int));
    
            var greenDamagedParameter = greenDamaged.HasValue ?
                new ObjectParameter("greenDamaged", greenDamaged) :
                new ObjectParameter("greenDamaged", typeof(int));
    
            var otherColorParameter = otherColor.HasValue ?
                new ObjectParameter("otherColor", otherColor) :
                new ObjectParameter("otherColor", typeof(int));
    
            var wrinkledParameter = wrinkled.HasValue ?
                new ObjectParameter("wrinkled", wrinkled) :
                new ObjectParameter("wrinkled", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateProduct", productIDParameter, productNameParameter, moistureParameter, weaveledParameter, originParameter, purityParameter, splitsParameter, qualityParameter, updatedByParameter, damagedParameter, foreignMatterParameter, greenDamagedParameter, otherColorParameter, wrinkledParameter);
        }
    
        public virtual ObjectResult<uspGetProductPriceByDate_Result> uspGetProductPriceByDate(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetProductPriceByDate_Result>("uspGetProductPriceByDate", dateParameter);
        }
    
        public virtual int uspProductPriceByDateCRUD(string crudOperation, Nullable<int> productId, Nullable<System.DateTime> priceDate, Nullable<int> price, Nullable<int> tr_createdBy, Nullable<int> tr_editedBy)
        {
            var crudOperationParameter = crudOperation != null ?
                new ObjectParameter("crudOperation", crudOperation) :
                new ObjectParameter("crudOperation", typeof(string));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            var priceDateParameter = priceDate.HasValue ?
                new ObjectParameter("priceDate", priceDate) :
                new ObjectParameter("priceDate", typeof(System.DateTime));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(int));
    
            var tr_createdByParameter = tr_createdBy.HasValue ?
                new ObjectParameter("tr_createdBy", tr_createdBy) :
                new ObjectParameter("tr_createdBy", typeof(int));
    
            var tr_editedByParameter = tr_editedBy.HasValue ?
                new ObjectParameter("tr_editedBy", tr_editedBy) :
                new ObjectParameter("tr_editedBy", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspProductPriceByDateCRUD", crudOperationParameter, productIdParameter, priceDateParameter, priceParameter, tr_createdByParameter, tr_editedByParameter);
        }
    
        public virtual ObjectResult<uspProductListByDateRange_Result> uspProductListByDateRange(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspProductListByDateRange_Result>("uspProductListByDateRange", startDateParameter, endDateParameter);
        }
    }
}
